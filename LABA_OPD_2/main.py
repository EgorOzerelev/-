from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.client.default import DefaultBotProperties
import asyncio

API_TOKEN = "7640627366:AAEIjE2MVXqVbLi9Y2TdnWR1ymQ1oyxr62o"

# –ü—Ä–∏–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
students_data = {
    "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω": {"attendance": "90%", "score": 85},
    "–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä": {"attendance": "80%", "score": 74},
    "–°–∏–¥–æ—Ä–æ–≤ –°–∏–¥–æ—Ä": {"attendance": "95%", "score": 91}
}

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
bot = Bot(
    token=API_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

@dp.message(F.text.in_(['/start', '/help']))
async def start_handler(message: Message):
    student_list = "\n".join(students_data.keys())
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ.\n–í—ã–±–µ—Ä–∏ —Å–≤–æ—ë –∏–º—è –∏–∑ —Å–ø–∏—Å–∫–∞:\n{student_list}\n\n"
        "–ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –∏–º—è —Ç–æ—á–Ω–æ, –∫–∞–∫ –≤ —Å–ø–∏—Å–∫–µ."
    )

@dp.message()
async def student_info(message: Message):
    name = message.text.strip()
    if name in students_data:
        data = students_data[name]
        await message.answer(
            f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è <b>{name}</b>:\nüìÖ –ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å: {data['attendance']}\nüìù –ë–∞–ª–ª—ã: {data['score']}"
        )
    else:
        await message.answer("–ò–º—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ.")

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())